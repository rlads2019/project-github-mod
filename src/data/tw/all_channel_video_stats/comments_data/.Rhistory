taiwan_growth_channel_stats <- read_csv("taiwan_growth_channel_stats.csv")
View(taiwan_growth_channel_stats)
taiwan_growth_channel_stats[1,4]
taiwan_growth_channel_stats[[1,4]]
subs <- c()
for(i in 1:100){
subs[i] <- taiwan_growth_channel_stats[[i,4]]
}
subs
data3 <-  data3 %>%
mutate(median_between_upload = median_between_upload)%>%
mutate(subs = subs)
data3 <- tibble(mean_between_upload = mean_between_upload)
data3 <-  data3 %>%
mutate(median_between_upload = median_between_upload)%>%
mutate(subs = subs)
data3
subsplot1 <- ggplot(data = data3) +
geom_point(mapping = aes(x = median_between_upload, y = subs)) +
geom_smooth(mapping = aes(x = median_between_upload, y = subs))
subsplot1
subsplot1 <- ggplot(data = data3) +
geom_point(mapping = aes(x = mean_between_upload, y = subs)) +
geom_smooth(mapping = aes(x = mean_between_upload, y = subs))
subsplot1
subsplot2 <- ggplot(data = data3) +
geom_point(mapping = aes(x = median_between_upload, y = subs)) +
geom_smooth(mapping = aes(x = median_between_upload, y = subs))
subsplot2
data3 <- tibble(mean_between_upload = mean_between_upload)
data3 <-  data3 %>%
mutate(median_between_upload = median_between_upload)%>%
mutate(subs = subs)%>%
filter(mean_between_upload < 50)%>%
filter(median_between_upload < 12)
subsplot1 <- ggplot(data = data3) +
geom_point(mapping = aes(x = mean_between_upload, y = subs)) +
geom_smooth(mapping = aes(x = mean_between_upload, y = subs))
subsplot2 <- ggplot(data = data3) +
geom_point(mapping = aes(x = median_between_upload, y = subs)) +
geom_smooth(mapping = aes(x = median_between_upload, y = subs))
subsplot1
data3 <- tibble(mean_between_upload = mean_between_upload)
data3 <-  data3 %>%
mutate(median_between_upload = median_between_upload)%>%
mutate(subs = subs)%>%
filter(mean_between_upload < 50)%>%
filter(median_between_upload < 12)%>%
filter(subs < 40000000)
subsplot1 <- ggplot(data = data3) +
geom_point(mapping = aes(x = mean_between_upload, y = subs)) +
geom_smooth(mapping = aes(x = mean_between_upload, y = subs))
subsplot2 <- ggplot(data = data3) +
geom_point(mapping = aes(x = median_between_upload, y = subs)) +
geom_smooth(mapping = aes(x = median_between_upload, y = subs))
subsplot1
subsplot2
library(httr)
library(tuber)
library(stringr)
library(tibble)
library(dplyr)
app_id ="177968669664-bm4it868718roj42rjlvj0lilclf4jr3.apps.googleusercontent.com"
app_secret = "rb-HuCJwAWYnQiG5guZ9lFhO"
yt_oauth(app_id,app_secret,token="")
rm(list=ls())
library(stringr)
library(tibble)
library(dplyr)
library(ggplot2)
setwd("~/Documents/GitHub/R-Final-Project/R-Final-Project/comments")
setwd("/Users/DerickD/Documents/GitHub/R-Final-Project/R-Final-Project/data/tw/all_channel_video_stats/comments_data")
data1 <- read.csv(paste0(as.character(1), '.csv'))
for(i in 1:100){
data1 <- read.csv(paste0(as.character(i), '.csv'))
}
rm(ls())
rm(list=ls())
library(readr)
library(dplyr)
#set working directory
setwd("/Users/DerickD/Documents/GitHub/R-Final-Project/R-Final-Project/data/tw/arranged")
View <- read_csv("View.csv")
allviewcount <- View %>%
group_by(Rank)%>%
summarise(allviewcounts = sum(View))
video_sum <- View %>%
group_by(Rank)%>%
summarise(video_sum = n())
averageviewcount <- c()
for(i in 1:100){
averageviewcount[i] <- allviewcount[i,2]/video_sum[i,2]
}
averagecount <- c()
for(i in seq_along(averageviewcount)){
averagecount[i] <- averageviewcount[[i]][1]
}
#set working directory
setwd("/Users/DerickD/Documents/GitHub/R-Final-Project/R-Final-Project/data/tw/all_channel_video_stats/comments_data")
for(i in 1:100){
data1 <- read.csv(paste0(as.character(i), '.csv'))
}
data1 <- tibble(mean_between_upload = mean_between_upload)
setwd("/Users/DerickD/Documents/GitHub/R-Final-Project/R-Final-Project/data/tw/arranged")
View <- read_csv("View.csv")
allviewcount <- View %>%
group_by(Rank)%>%
summarise(allviewcounts = sum(View))
video_sum <- View %>%
group_by(Rank)%>%
summarise(video_sum = n())
averageviewcount <- c()
for(i in 1:100){
averageviewcount[i] <- allviewcount[i,2]/video_sum[i,2]
}
averagecount <- c()
for(i in seq_along(averageviewcount)){
averagecount[i] <- averageviewcount[[i]][1]
}
mean_comments_count <- mean(data1$comments_count)
median_comments_count <- median(data1$comments_count)
?mean
averagecount
data1$reply_rate[data1$reply_rate!=-1]
data1
dim(data1$reply_rate[data1$reply_rate!=-1])
str(data1$reply_rate[data1$reply_rate!=-1])
str(data1$reply_rate)
data_result <- data.frame(mean_comments_count = numeric(),
median_comments_count = numeric(),
mean_reply_rate = numeric(),
median_reply_rate = numeric())
data_result
data_result$mean_comments_count
for(i in 1:100){
data1 <- read.csv(paste0(as.character(i), '.csv'))
mean_comments_count <- mean(data1$comments_count, na.rm = T)
median_comments_count <- median(data1$comments_count, na.rm = T)
mean_reply_rate <- mean(data1$reply_rate[data1$reply_rate!=-1], na.rm = T)
median_reply_rate <- median(data1$reply_rate[data1$reply_rate!=-1], na.rm = T)
data_result <- rbind(data_result, c(mean_comments_count, median_comments_count,
mean_reply_rate, median_reply_rate))
}
setwd("/Users/DerickD/Documents/GitHub/R-Final-Project/R-Final-Project/data/tw/all_channel_video_stats/comments_data")
data_result <- data.frame(mean_comments_count = numeric(),
median_comments_count = numeric(),
mean_reply_rate = numeric(),
median_reply_rate = numeric())
for(i in 1:100){
data1 <- read.csv(paste0(as.character(i), '.csv'))
mean_comments_count <- mean(data1$comments_count, na.rm = T)
median_comments_count <- median(data1$comments_count, na.rm = T)
mean_reply_rate <- mean(data1$reply_rate[data1$reply_rate!=-1], na.rm = T)
median_reply_rate <- median(data1$reply_rate[data1$reply_rate!=-1], na.rm = T)
data_result <- rbind(data_result, c(mean_comments_count, median_comments_count,
mean_reply_rate, median_reply_rate))
}
data_result
data_result <- data.frame(mean_comments_count = numeric(),
median_comments_count = numeric(),
mean_reply_rate = numeric(),
median_reply_rate = numeric())
colnames(data_result) <- c('mean_comments_count', 'median_comments_count',
'mean_reply_rate', 'median_reply_rate')
for(i in 1:100){
data1 <- read.csv(paste0(as.character(i), '.csv'))
mean_comments_count <- mean(data1$comments_count, na.rm = T)
median_comments_count <- median(data1$comments_count, na.rm = T)
mean_reply_rate <- mean(data1$reply_rate[data1$reply_rate!=-1], na.rm = T)
median_reply_rate <- median(data1$reply_rate[data1$reply_rate!=-1], na.rm = T)
data_result <- rbind(data_result, c('mean_comments_count' = mean_comments_count, 'median_comments_count' = median_comments_count, 'mean_reply_rate' = mean_reply_rate, 'median_reply_rate' = median_reply_rate))
}
setwd("/Users/DerickD/Documents/GitHub/R-Final-Project/R-Final-Project/data/tw/all_channel_video_stats/comments_data")
data_result <- data.frame(mean_comments_count = numeric(),
median_comments_count = numeric(),
mean_reply_rate = numeric(),
median_reply_rate = numeric())
colnames(data_result) <- c('mean_comments_count', 'median_comments_count',
'mean_reply_rate', 'median_reply_rate')
for(i in 1:100){
data1 <- read.csv(paste0(as.character(i), '.csv'))
mean_comments_count <- mean(data1$comments_count, na.rm = T)
median_comments_count <- median(data1$comments_count, na.rm = T)
mean_reply_rate <- mean(data1$reply_rate[data1$reply_rate!=-1], na.rm = T)
median_reply_rate <- median(data1$reply_rate[data1$reply_rate!=-1], na.rm = T)
data_result <- rbind(data_result, c('mean_comments_count' = mean_comments_count, 'median_comments_count' = median_comments_count, 'mean_reply_rate' = mean_reply_rate, 'median_reply_rate' = median_reply_rate))
}
data_result
c('mean_comments_count' = mean_comments_count, 'median_comments_count' = median_comments_count, 'mean_reply_rate' = mean_reply_rate, 'median_reply_rate' = median_reply_rate)
?rbind
data_result <- rbind(data_result, c('mean_comments_count' = mean_comments_count, 'median_comments_count' = median_comments_count, 'mean_reply_rate' = mean_reply_rate, 'median_reply_rate' = median_reply_rate), make.row.names = F)
data_result
colnames(data_result) <- c('mean_comments_count', 'median_comments_count',
'mean_reply_rate', 'median_reply_rate')
data_result
setwd("/Users/DerickD/Documents/GitHub/R-Final-Project/R-Final-Project/data/tw/all_channel_video_stats/comments_data")
data_result <- data.frame(mean_comments_count = numeric(),
median_comments_count = numeric(),
mean_reply_rate = numeric(),
median_reply_rate = numeric())
colnames(data_result) <- c('mean_comments_count', 'median_comments_count',
'mean_reply_rate', 'median_reply_rate')
for(i in 1:100){
data1 <- read.csv(paste0(as.character(i), '.csv'))
mean_comments_count <- mean(data1$comments_count, na.rm = T)
median_comments_count <- median(data1$comments_count, na.rm = T)
mean_reply_rate <- mean(data1$reply_rate[data1$reply_rate!=-1], na.rm = T)
median_reply_rate <- median(data1$reply_rate[data1$reply_rate!=-1], na.rm = T)
data_result <- rbind(data_result, c('mean_comments_count' = mean_comments_count, 'median_comments_count' = median_comments_count, 'mean_reply_rate' = mean_reply_rate, 'median_reply_rate' = median_reply_rate), make.row.names = F)
}
data_result
colnames(data_result) <- c('mean_comments_count', 'median_comments_count',
'mean_reply_rate', 'median_reply_rate')
data1 <-  data1 %>%
mutate(averagecount = averagecount)
data1
data_result <-  data_result %>%
mutate(averagecount = averagecount)
data_result
library(ggplot2)
countplot1 <- ggplot(data = data_result) +
geom_point(mapping = aes(x = mean_comments_count, y = averagecount)) +
geom_smooth(mapping = aes(x = mean_comments_count, y = averagecount))
countplot1
data_result <-  data_result %>%
mutate(averagecount = averagecount) %>%
filter(mean_comments_count < 500) %>%
filter(averagecount < 2000000)
countplot1 <- ggplot(data = data_result) +
geom_point(mapping = aes(x = mean_comments_count, y = averagecount)) +
geom_smooth(mapping = aes(x = mean_comments_count, y = averagecount))
countplot1
countplot2 <- ggplot(data = data_result) +
geom_point(mapping = aes(x = median_comments_count, y = averagecount)) + geom_smooth(mapping = aes(x = median_comments_count, y = averagecount))
countplot2
ar <- read_csv("α.csv")
be <- read_csv("β.csv")
ar
ardata <- ar %>%
group_by(Rank)%>%
summarise(ar = α[1])
ar_data <- c()
for(i in 1:100){
ar_data[i] <- ardata[i,2]
}
ardata <- c()
for(i in 1:100){
ardata[i] <- ar_data[[i]][1]
}
####
####
bedata <- be %>%
group_by(Rank)%>%
summarise(be = β[1])
be_data <- c()
for(i in 1:100){
be_data[i] <- bedata[i,2]
}
bedata <- c()
for(i in 1:100){
bedata[i] <- be_data[[i]][1]
}
data_result_rr <-  data_result %>%
mutate(ar = ardata)%>%
mutate(be = bedata)%>%
#filter(mean_between_upload < 100)%>%
#filter(ar < 0.3)%>%
#filter(be < 12)
arplot1 <- ggplot(data = data_result_rr) +
geom_point(mapping = aes(x = mean_reply_rate, y = ar)) +
geom_smooth(mapping = aes(x = mean_reply_rate, y = ar))
data_result_rr <-  data_result %>%
mutate(ar = ardata)%>%
mutate(be = bedata)
str(ar_data)
ardata <- ar %>%
group_by(Rank)%>%
summarise(ar = α[1])
ar_data <- c()
for(i in 1:100){
ar_data[i] <- ardata[i,2]
}
ardata <- c()
for(i in 1:100){
ardata[i] <- ar_data[[i]][1]
}
ardata
data_result_rr <-  data_result %>%
mutate(ar = ardata)%>%
mutate(be = bedata)
str(data_result)
setwd("/Users/DerickD/Documents/GitHub/R-Final-Project/R-Final-Project/data/tw/all_channel_video_stats/comments_data")
data_result <- data.frame(mean_comments_count = numeric(),
median_comments_count = numeric(),
mean_reply_rate = numeric(),
median_reply_rate = numeric())
for(i in 1:100){
data1 <- read.csv(paste0(as.character(i), '.csv'))
mean_comments_count <- mean(data1$comments_count, na.rm = T)
median_comments_count <- median(data1$comments_count, na.rm = T)
mean_reply_rate <- mean(data1$reply_rate[data1$reply_rate!=-1], na.rm = T)
median_reply_rate <- median(data1$reply_rate[data1$reply_rate!=-1], na.rm = T)
data_result <- rbind(data_result, c('mean_comments_count' = mean_comments_count, 'median_comments_count' = median_comments_count, 'mean_reply_rate' = mean_reply_rate, 'median_reply_rate' = median_reply_rate), make.row.names = F)
}
colnames(data_result) <- c('mean_comments_count', 'median_comments_count',
'mean_reply_rate', 'median_reply_rate')
str(data_result)
data_result_rr <-  data_result %>%
mutate(ar = ardata)%>%
mutate(be = bedata)
arplot1 <- ggplot(data = data_result_rr) +
geom_point(mapping = aes(x = mean_reply_rate, y = ar)) +
geom_smooth(mapping = aes(x = mean_reply_rate, y = ar))
arplot1
data_result_rr <-  data_result %>%
mutate(ar = ardata)%>%
mutate(be = bedata) %>%
#filter(mean_between_upload < 100)%>%
filter(ar < 0.3)
#filter(be < 12)
arplot1 <- ggplot(data = data_result_rr) +
geom_point(mapping = aes(x = mean_reply_rate, y = ar)) +
geom_smooth(mapping = aes(x = mean_reply_rate, y = ar))
arplot1
data_result_rr <-  data_result %>%
mutate(ar = ardata)%>%
mutate(be = bedata) %>%
filter(mean_reply_rate < 0.15)%>%
filter(ar < 0.3)
#filter(be < 12)
arplot1 <- ggplot(data = data_result_rr) +
geom_point(mapping = aes(x = mean_reply_rate, y = ar)) +
geom_smooth(mapping = aes(x = mean_reply_rate, y = ar))
arplot1
arplot1 <- ggplot(data = data_result_rr) +
geom_point(mapping = aes(x = mean_reply_rate, y = ar)) +
geom_smooth(mapping = aes(x = mean_reply_rate, y = ar))
arplot2 <- ggplot(data = data2) +
geom_point(mapping = aes(x = median_reply_rate, y = ar)) +
geom_smooth(mapping = aes(x = median_reply_rate, y = ar))
arplot1 <- ggplot(data = data_result_rr) +
geom_point(mapping = aes(x = mean_reply_rate, y = ar)) +
geom_smooth(mapping = aes(x = mean_reply_rate, y = ar))
arplot2 <- ggplot(data = data_result_rr) +
geom_point(mapping = aes(x = median_reply_rate, y = ar)) +
geom_smooth(mapping = aes(x = median_reply_rate, y = ar))
beplot1 <- ggplot(data = data_result_rr) +
geom_point(mapping = aes(x = mean_reply_rate, y = be)) +
geom_smooth(mapping = aes(x = mean_reply_rate, y = be))
beplot2 <- ggplot(data = data_result_rr) +
geom_point(mapping = aes(x = median_reply_rate, y = be)) +
geom_smooth(mapping = aes(x = median_reply_rate, y = be))
beplot1
beplot2
taiwan_growth_channel_stats <- read_csv("taiwan_growth_channel_stats.csv")
taiwan_growth_channel_stats
subs
subs <- c()
for(i in 1:100){
subs[i] <- taiwan_growth_channel_stats[[i,5]]
}
subs
data_result_sub <-  data_result %>%
mutate(subs = subs)%>%
#filter(mean_between_upload < 50)%>%
#filter(median_between_upload < 12)%>%
#filter(subs < 40000000)
subsplot1 <- ggplot(data = data_result_sub) +
geom_point(mapping = aes(x = mean_comments_count, y = subs)) +
geom_smooth(mapping = aes(x = mean_comments_count, y = subs))
subs
data_result_sub <-  data_result %>%
mutate(subs = subs)%>%
#filter(mean_between_upload < 50)%>%
#filter(median_between_upload < 12)%>%
#filter(subs < 40000000)
subsplot1 <- ggplot(data = data_result_sub) +
geom_point(mapping = aes(x = mean_comments_count, y = subs)) +
geom_smooth(mapping = aes(x = mean_comments_count, y = subs))
data_result_sub <-  data_result %>%
mutate(subs = subs)
#filter(mean_between_upload < 50)%>%
#filter(median_between_upload < 12)%>%
#filter(subs < 40000000)
subsplot1 <- ggplot(data = data_result_sub) +
geom_point(mapping = aes(x = mean_comments_count, y = subs)) +
geom_smooth(mapping = aes(x = mean_comments_count, y = subs))
subsplot1
data_result_sub <-  data_result %>%
mutate(subs = subs) %>%
#filter(mean_between_upload < 50)%>%
#filter(median_between_upload < 12)%>%
filter(subs < 40000000)
subsplot1 <- ggplot(data = data_result_sub) +
geom_point(mapping = aes(x = mean_comments_count, y = subs)) +
geom_smooth(mapping = aes(x = mean_comments_count, y = subs))
subsplot1
data_result_sub <-  data_result %>%
mutate(subs = subs) %>%
#filter(mean_between_upload < 50)%>%
#filter(median_between_upload < 12)%>%
filter(subs < 200000)
subsplot1 <- ggplot(data = data_result_sub) +
geom_point(mapping = aes(x = mean_comments_count, y = subs)) +
geom_smooth(mapping = aes(x = mean_comments_count, y = subs))
subsplot1
data_result_sub <-  data_result %>%
mutate(subs = subs) %>%
#filter(mean_between_upload < 50)%>%
#filter(median_between_upload < 12)%>%
#filter(subs < 200000)
subsplot1 <- ggplot(data = data_result_sub %>% filter(subs < 200000)) +
geom_point(mapping = aes(x = mean_comments_count, y = subs)) +
geom_smooth(mapping = aes(x = mean_comments_count, y = subs))
subsplot1 <- ggplot(data = (data_result_sub %>% filter(subs < 200000))) +
geom_point(mapping = aes(x = mean_comments_count, y = subs)) +
geom_smooth(mapping = aes(x = mean_comments_count, y = subs))
subsplot1
subsplot2 <- ggplot(data = (data_result_sub %>% filter(subs < 200000))) +
geom_point(mapping = aes(x = median_reply_rate, y = subs)) +
geom_smooth(mapping = aes(x = median_reply_rate, y = subs))
subsplot2
subsplot2 <- ggplot(data = (data_result_sub %>% filter(subs < 200000) %>% filter(median_reply_rate < 0.3))) +
geom_point(mapping = aes(x = median_reply_rate, y = subs)) +
geom_smooth(mapping = aes(x = median_reply_rate, y = subs))
subsplot2
subsplot2 <- ggplot(data = (data_result_sub %>% filter(subs < 200000) %>% filter(median_reply_rate < 0.05))) +
geom_point(mapping = aes(x = median_reply_rate, y = subs)) +
geom_smooth(mapping = aes(x = median_reply_rate, y = subs))
subsplot2
subsplot2 <- ggplot(data = (data_result_sub %>% filter(subs < 200000) %>% filter(median_reply_rate < 0.005))) +
geom_point(mapping = aes(x = median_reply_rate, y = subs)) +
geom_smooth(mapping = aes(x = median_reply_rate, y = subs))
subsplot2
subsplot2 <- ggplot(data = (data_result_sub %>% filter(subs < 200000)) +
geom_point(mapping = aes(x = median_reply_rate, y = subs)) +
geom_smooth(mapping = aes(x = median_reply_rate, y = subs))
subsplot2
subsplot2 <- ggplot(data = (data_result_sub %>% filter(subs < 200000))) +
geom_point(mapping = aes(x = median_reply_rate, y = subs)) +
geom_smooth(mapping = aes(x = median_reply_rate, y = subs))
subsplot2
library(readr)
library(dplyr)
#set working directory
setwd("/Users/DerickD/Documents/GitHub/R-Final-Project/R-Final-Project/data/tw/arranged")
View <- read_csv("View.csv")
allviewcount <- View %>%
group_by(Rank)%>%
summarise(allviewcounts = sum(View))
video_sum <- View %>%
group_by(Rank)%>%
summarise(video_sum = n())
averageviewcount <- c()
for(i in 1:100){
averageviewcount[i] <- allviewcount[i,2]/video_sum[i,2]
}
averagecount <- c()
for(i in seq_along(averageviewcount)){
averagecount[i] <- averageviewcount[[i]][1]
}
#set working directory
setwd("/Users/DerickD/Documents/GitHub/R-Final-Project/R-Final-Project/data/tw/all_channel_video_stats/comments_data")
data_result <- data.frame(mean_comments_count = numeric(),
median_comments_count = numeric(),
mean_reply_rate = numeric(),
median_reply_rate = numeric())
for(i in 1:100){
data1 <- read.csv(paste0(as.character(i), '.csv'))
mean_comments_count <- mean(data1$comments_count, na.rm = T)
median_comments_count <- median(data1$comments_count, na.rm = T)
mean_reply_rate <- mean(data1$reply_rate[data1$reply_rate!=-1], na.rm = T)
median_reply_rate <- median(data1$reply_rate[data1$reply_rate!=-1], na.rm = T)
data_result <- rbind(data_result, c('mean_comments_count' = mean_comments_count, 'median_comments_count' = median_comments_count, 'mean_reply_rate' = mean_reply_rate, 'median_reply_rate' = median_reply_rate), make.row.names = F)
}
colnames(data_result) <- c('mean_comments_count', 'median_comments_count',
'mean_reply_rate', 'median_reply_rate')
data_result_count <-  data_result %>%
mutate(averagecount = averagecount) %>%
filter(mean_comments_count < 500) %>%
filter(averagecount < 2000000)
library(ggplot2)
countplot1 <- ggplot(data = data_result_count) +
geom_point(mapping = aes(x = mean_comments_count, y = averagecount)) +
geom_smooth(mapping = aes(x = mean_comments_count, y = averagecount))
countplot2 <- ggplot(data = data_result_count) +
geom_point(mapping = aes(x = median_comments_count, y = averagecount)) +
geom_smooth(mapping = aes(x = median_comments_count, y = averagecount))
ar <- read_csv("α.csv")
?ggsave
ggsave('plot1.jpg',arplot1)
ggsave('plot1.jpg',arplot1, width = 120, height = 100)
ggsave('plot1.jpg',arplot1, width = 120, height = 100, limitsize = F)
aarplot1
arplot1
arplot2
beplot1
beplot2
beplot1 <- ggplot(data = (data_result_rr %>% filter(be < 25))) +
geom_point(mapping = aes(x = mean_reply_rate, y = be)) +
geom_smooth(mapping = aes(x = mean_reply_rate, y = be))
beplot2 <- ggplot(data = (data_result_rr %>% filter(be < 25))) +
geom_point(mapping = aes(x = median_reply_rate, y = be)) +
geom_smooth(mapping = aes(x = median_reply_rate, y = be))
beplot1
beplot2
subsplot1
subsplot2
countplot1
countplot2
arplot1
arplot2
