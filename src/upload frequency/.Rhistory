?yt_topic_search
yt_search(term = "Barack Obama", published_after = "2019-10-01T00:00:00Z")
yt_search(term = "阿滴", published_after = "2019-10-01T00:00:00Z")
yt_search(term = "阿滴", published_after = "2019-12-20T00:00:00Z")
yt_search(term = "阿滴", published_after = "2019-12-20T00:00:00Z", max_results = 5)
a <- yt_search(term = "", max_results = 5, channel_id = "UCSZlxQzFeHpZKKd7_HK-SIA")
library(httr)
library(tuber)
library(stringr)
app_id ="959930400572-2o8vqpq7aqsbsng3otgs6v6f7cd3nclg.apps.googleusercontent.com"
app_secret = "GTq91foXo_kV0mxcaHVhnMH0"
yt_oauth(app_id,app_secret,token="")
a <- yt_search(term = "", max_results = 5, channel_id = "UCSZlxQzFeHpZKKd7_HK-SIA")
library(httr)
library(tuber)
library(stringr)
app_id ="959930400572-2o8vqpq7aqsbsng3otgs6v6f7cd3nclg.apps.googleusercontent.com"
app_secret = "GTq91foXo_kV0mxcaHVhnMH0"
yt_oauth(app_id,app_secret,token="")
a <- yt_search(term = "", max_results = 5, channel_id = "UCSZlxQzFeHpZKKd7_HK-SIA")
library(dplyr)
b <- as_tibble(a)
date = as.Date(b$publishedAt)
date <- str_replace(date, "(\\d{4})-(\\d{2})-(\\d{2})" ,"\\1-\\2")
b %>%
mutate(date = date)%>%
filter(date > "2018-12") %>%
arrange(date)%>%
group_by(date)%>%
summarise(count = n())
b
View(b)
b <- as_tibble(a)
b
View(b)
b$publishedAt[1]
b$publishedAt[2] - b$publishedAt[1]
date = as.Date(b$publishedAt)
date
date[2] - date[1]
between_upload <- vector()
n(date)
seq_along(date)
date = as.Date(b$publishedAt)
date
date = as.Date(b$publishedAt)
date1 <- str_replace(date, "(\\d{4})-(\\d{2})-(\\d{2})" ,"\\1-\\2")
b %>%
mutate(date1 = date1)%>%
filter(date1 > "2018-12") %>%
arrange(date1)%>%
group_by(date1)%>%
summarise(count = n())
date[2]-date[1]
abs(-434)
for(i in seq_along(date)){
between_upload[i] <- abs(date[i + 1] - date[i])
}
between()
between_upload
mean(between_upload)
for(i in seq_along(date)){
if( i == length(date)){
between_upload[i] <- abs(date[i] - date[1])
}
else{
between_upload[i] <- abs(date[i + 1] - date[i])
}
}
mean(between_upload)
between_upload
library(readr)
α <- read_csv("C:/Users/kmes8/Desktop/final/up fre/α.csv")
View(α)
setwd("C:/Users/kmes8/Desktop/final/up fre")
library(readr)
α <- read_csv("α.csv")
α
library(readr)
α <- read_csv("α.csv")
α
be <- read_csv("β.csv")
be
View(ar)
be
View(ar)
ar[1,9]
ar[1,6]
ar[1,3]
library(readr)
α <- read_csv("α.csv")
View(α)
library(readr)
β <- read_csv("β.csv")
View(β)
α <- read_csv("α.csv")
β <- read_csv("β.csv")
α
View(α)
ar <- read_csv("α.csv")
be <- read_csv("β.csv")
View(ar)
View(ar)
ardata <- ar %>%
group_by(Rank)%>%
summarise(ar = α))
ardata <- ar %>%
group_by(Rank)%>%
summarise(ar = α)
library(dplyr)
ardata <- ar %>%
group_by(Rank)%>%
summarise(ar = α)
ar
ardata <- ar %>%
group_by(Rank)%>%
summarise(ar = α[1])
ardata
bedata <- be %>%
group_by(Rank)%>%
summarise(be = β[1])
bedata
data2 <- tibble(mean_between_upload = mean_between_upload)
countplot1 <- ggplot(data = data1) +
geom_point(mapping = aes(x = mean_between_upload, y = averagecount)) +
geom_smooth(mapping = aes(x = mean_between_upload, y = averagecount))
setwd("C:/Users/kmes8/Desktop/final/up fre")
View <- read_csv("View.csv")
library(readr)
library(dplyr)
View <- read_csv("View.csv")
allviewcount <- View %>%
group_by(Rank)%>%
summarise(allviewcounts = sum(viewcount))
View
View(View)
library(readr)
library(dplyr)
View <- read_csv("View.csv")
allviewcount <- View %>%
group_by(Rank)%>%
summarise(allviewcounts = sum(View))
video_sum <- View %>%
group_by(Rank)%>%
summarise(video_sum = n())
averageviewcount <- c()
for(i in 1:100){
averageviewcount[i] <- allviewcount[i,2]/video_sum[i,2]
}
averagecount <- c()
for(i in seq_along(averageviewcount)){
averagecount[i] <- averageviewcount[[i]][1]
}
data1 <- tibble(mean_between_upload = mean_between_upload)
X <- list()
for(i in c(1:100)){
X[[i]] <- read_csv(paste0(i,".csv"))
}
month_frequency <- list()
mean_between_upload <- c()
median_between_upload <- c()
for(i in seq_along(X)){
between_upload <- c()
#change the formats of the dates(e.g. 2000-01-01 -> 2000-01)
date <- as.Date(X[[i]]$publication_date)
date1 <- str_replace(date, "(\\d{4})-(\\d{2})-(\\d{2})" ,"\\1-\\2")
#filter the videos uploaded in 2019 and calculate how many videos are     uploaded per month
month_frequency[[i]] <-  X[[i]] %>%
mutate(date1 = date1)%>%
filter(date1 > "2018-12") %>%
arrange(date1)%>%
group_by(date1)%>%
summarise(count = n())
#empty vector to save the result
#order the date
date_order <- sort(date)
#calculate the time between each video
for(j in 2:length(date_order)){
between_upload[j-1] <- date_order[j] - date_order[j-1]
}
mean_between_upload[i] <- mean(between_upload)
median_between_upload[i] <- median(between_upload)
}
library(httr)
library(tuber)
library(stringr)
library(tibble)
library(dplyr)
X <- list()
for(i in c(1:100)){
X[[i]] <- read_csv(paste0(i,".csv"))
}
month_frequency <- list()
mean_between_upload <- c()
median_between_upload <- c()
for(i in seq_along(X)){
between_upload <- c()
#change the formats of the dates(e.g. 2000-01-01 -> 2000-01)
date <- as.Date(X[[i]]$publication_date)
date1 <- str_replace(date, "(\\d{4})-(\\d{2})-(\\d{2})" ,"\\1-\\2")
#filter the videos uploaded in 2019 and calculate how many videos are     uploaded per month
month_frequency[[i]] <-  X[[i]] %>%
mutate(date1 = date1)%>%
filter(date1 > "2018-12") %>%
arrange(date1)%>%
group_by(date1)%>%
summarise(count = n())
#empty vector to save the result
#order the date
date_order <- sort(date)
#calculate the time between each video
for(j in 2:length(date_order)){
between_upload[j-1] <- date_order[j] - date_order[j-1]
}
mean_between_upload[i] <- mean(between_upload)
median_between_upload[i] <- median(between_upload)
}
library(readr)
library(dplyr)
View <- read_csv("View.csv")
allviewcount <- View %>%
group_by(Rank)%>%
summarise(allviewcounts = sum(View))
video_sum <- View %>%
group_by(Rank)%>%
summarise(video_sum = n())
averageviewcount <- c()
for(i in 1:100){
averageviewcount[i] <- allviewcount[i,2]/video_sum[i,2]
}
averagecount <- c()
for(i in seq_along(averageviewcount)){
averagecount[i] <- averageviewcount[[i]][1]
}
data1 <- tibble(mean_between_upload = mean_between_upload)
data1 <-  data1 %>%
mutate(median_between_upload = median_between_upload)%>%
mutate(averagecount = averagecount)%>%
filter(mean_between_upload < 100)%>%
filter(averagecount < 1000000)
library(ggplot2)
countplot1 <- ggplot(data = data1) +
geom_point(mapping = aes(x = mean_between_upload, y = averagecount)) +
geom_smooth(mapping = aes(x = mean_between_upload, y = averagecount))
countplot2 <- ggplot(data = data1) +
geom_point(mapping = aes(x = median_between_upload, y = averagecount)) + geom_smooth(mapping = aes(x = median_between_upload, y = averagecount))
ar <- read_csv("α.csv")
be <- read_csv("β.csv")
ardata <- ar %>%
group_by(Rank)%>%
summarise(ar = α[1])
bedata <- be %>%
group_by(Rank)%>%
summarise(be = β[1])
data2 <- tibble(mean_between_upload = mean_between_upload)
data2 <-  data2 %>%
mutate(median_between_upload = median_between_upload)%>%
mutate(ar = ardata)%>%
mutate(be = bedata)
ar
ardata <- ar %>%
group_by(Rank)%>%
summarise(ar = α[1])
ar <- read_csv("α.csv")
be <- read_csv("β.csv")
ardata <- ar %>%
group_by(Rank)%>%
summarise(ar = α[1])
bedata <- be %>%
group_by(Rank)%>%
summarise(be = β[1])
data2 <- tibble(mean_between_upload = mean_between_upload)
data2 <-  data2 %>%
mutate(median_between_upload = median_between_upload)%>%
mutate(ar = ardata)%>%
mutate(be = bedata)
ardata
data2 <-  data2 %>%
mutate(median_between_upload = median_between_upload)%>%
mutate(ar = ardata["ar"])%>%
mutate(be = bedata["be"])
data2 <- tibble(mean_between_upload = mean_between_upload)
data2
ardata
ardata["ar"]
ardata
seq_along(ardata)
ardata[1,2]
ardata <- ar %>%
group_by(Rank)%>%
summarise(ar = α[1])
ar_data <- c()
for(i in 1:100){
ar_data[i] <- ardata[i,2]
}
bedata <- be %>%
group_by(Rank)%>%
summarise(be = β[1])
be_data <- c()
for(i in 1:100){
be_data[i] <- bedata[i,2]
}
ar_data
data2 <-  data2 %>%
mutate(median_between_upload = median_between_upload)%>%
mutate(ar = ar_data)%>%
mutate(be = be_data)
data2
View(data2)
arplot1 <- ggplot(data = data2) +
geom_point(mapping = aes(x = mean_between_upload, y = ar)) +
geom_smooth(mapping = aes(x = mean_between_upload, y = ar))
arplot1
ggplot(data = data2) +
geom_point(mapping = aes(x = mean_between_upload, y = ar)) +
geom_smooth(mapping = aes(x = mean_between_upload, y = ar))
countplot2 <- ggplot(data = data1) +
geom_point(mapping = aes(x = median_between_upload, y = averagecount)) + geom_smooth(mapping = aes(x = median_between_upload, y = averagecount))
countplot2
data2[57,3]
data2["ar"]
ar_data
ardata[[1]][1]
ardata[[100]][1]
ar_data[[100]][1]
ardata <- ar %>%
group_by(Rank)%>%
summarise(ar = α[1])
ar_data <- c()
for(i in 1:100){
ar_data[i] <- ardata[i,2]
}
ardata <- c()
for(i in 1:100){
ardata[i] <- ar_data[[i]][1]
}
ardata
bedata <- be %>%
group_by(Rank)%>%
summarise(be = β[1])
be_data <- c()
for(i in 1:100){
be_data[i] <- bedata[i,2]
}
bedata <- c()
for(i in 1:100){
bedata[i] <- be_data[[i]][1]
}
bedata
data2 <- tibble(mean_between_upload = mean_between_upload)
data2 <-  data2 %>%
mutate(median_between_upload = median_between_upload)%>%
mutate(ar = ar_data)%>%
mutate(be = be_data)
arplot1 <- ggplot(data = data2) +
geom_point(mapping = aes(x = mean_between_upload, y = ar)) +
geom_smooth(mapping = aes(x = mean_between_upload, y = ar))
arplot1
data2 <- tibble(mean_between_upload = mean_between_upload)
data2 <-  data2 %>%
mutate(median_between_upload = median_between_upload)%>%
mutate(ar = ar_data)%>%
mutate(be = be_data)
data2
View(data2)
ardata <- as.vector(ardata)
bedata <- as.vector(bedata)
data2 <- tibble(mean_between_upload = mean_between_upload)
data2 <-  data2 %>%
mutate(median_between_upload = median_between_upload)%>%
mutate(ar = ar_data)%>%
mutate(be = be_data)
data2
ardata <- ar %>%
group_by(Rank)%>%
summarise(ar = α[1])
ar_data <- c()
for(i in 1:100){
ar_data[i] <- ardata[i,2]
}
ardata <- c()
for(i in 1:100){
ardata[i] <- ar_data[[i]][1]
}
bedata <- be %>%
group_by(Rank)%>%
summarise(be = β[1])
be_data <- c()
for(i in 1:100){
be_data[i] <- bedata[i,2]
}
bedata <- c()
for(i in 1:100){
bedata[i] <- be_data[[i]][1]
}
data2 <- tibble(mean_between_upload = mean_between_upload)
data2 <-  data2 %>%
mutate(median_between_upload = median_between_upload)%>%
mutate(ar = ardata)%>%
mutate(be = bedata)
data2
arplot1 <- ggplot(data = data2) +
geom_point(mapping = aes(x = mean_between_upload, y = ar)) +
geom_smooth(mapping = aes(x = mean_between_upload, y = ar))
arplot1
data2 <-  data2 %>%
mutate(median_between_upload = median_between_upload)%>%
mutate(ar = ardata)%>%
mutate(be = bedata)%>%
filter(mean_between_upload < 100)%>%
filter(ar < 0.3)
arplot1 <- ggplot(data = data2) +
geom_point(mapping = aes(x = mean_between_upload, y = ar)) +
geom_smooth(mapping = aes(x = mean_between_upload, y = ar))
arplot1
arplot2 <- ggplot(data = data2) +
geom_point(mapping = aes(x = median_between_upload, y = ar)) +
geom_smooth(mapping = aes(x = median_between_upload, y = ar))
arplot2
beplot1 <- ggplot(data = data2) +
geom_point(mapping = aes(x = mean_between_upload, y = be)) +
geom_smooth(mapping = aes(x = mean_between_upload, y = be))
beplot1
data2 <-  data2 %>%
mutate(median_between_upload = median_between_upload)%>%
mutate(ar = ardata)%>%
mutate(be = bedata)%>%
filter(mean_between_upload < 100)%>%
filter(ar < 0.3)%>%
filter(be < 12)
data2 <-  data2 %>%
mutate(median_between_upload = median_between_upload)%>%
mutate(ar = ardata)%>%
mutate(be = bedata)%>%
filter(mean_between_upload < 100)%>%
filter(ar < 0.3)
data2 <- tibble(mean_between_upload = mean_between_upload)
data2 <-  data2 %>%
mutate(median_between_upload = median_between_upload)%>%
mutate(ar = ardata)%>%
mutate(be = bedata)%>%
filter(mean_between_upload < 100)%>%
filter(ar < 0.3)%>%
filter(be < 12)
data2
beplot1 <- ggplot(data = data2) +
geom_point(mapping = aes(x = mean_between_upload, y = be)) +
geom_smooth(mapping = aes(x = mean_between_upload, y = be))
beplot1
beplot2 <- ggplot(data = data2) +
geom_point(mapping = aes(x = median_between_upload, y = be)) +
geom_smooth(mapping = aes(x = median_between_upload, y = be))
beplot2
beplot1
library(readr)
taiwan_growth_channel_stats <- read_csv("taiwan_growth_channel_stats.csv")
View(taiwan_growth_channel_stats)
taiwan_growth_channel_stats[1,4]
taiwan_growth_channel_stats[[1,4]]
subs <- c()
for(i in 1:100){
subs[i] <- taiwan_growth_channel_stats[[i,4]]
}
subs
data3 <-  data3 %>%
mutate(median_between_upload = median_between_upload)%>%
mutate(subs = subs)
data3 <- tibble(mean_between_upload = mean_between_upload)
data3 <-  data3 %>%
mutate(median_between_upload = median_between_upload)%>%
mutate(subs = subs)
data3
subsplot1 <- ggplot(data = data3) +
geom_point(mapping = aes(x = median_between_upload, y = subs)) +
geom_smooth(mapping = aes(x = median_between_upload, y = subs))
subsplot1
subsplot1 <- ggplot(data = data3) +
geom_point(mapping = aes(x = mean_between_upload, y = subs)) +
geom_smooth(mapping = aes(x = mean_between_upload, y = subs))
subsplot1
subsplot2 <- ggplot(data = data3) +
geom_point(mapping = aes(x = median_between_upload, y = subs)) +
geom_smooth(mapping = aes(x = median_between_upload, y = subs))
subsplot2
data3 <- tibble(mean_between_upload = mean_between_upload)
data3 <-  data3 %>%
mutate(median_between_upload = median_between_upload)%>%
mutate(subs = subs)%>%
filter(mean_between_upload < 50)%>%
filter(median_between_upload < 12)
subsplot1 <- ggplot(data = data3) +
geom_point(mapping = aes(x = mean_between_upload, y = subs)) +
geom_smooth(mapping = aes(x = mean_between_upload, y = subs))
subsplot2 <- ggplot(data = data3) +
geom_point(mapping = aes(x = median_between_upload, y = subs)) +
geom_smooth(mapping = aes(x = median_between_upload, y = subs))
subsplot1
data3 <- tibble(mean_between_upload = mean_between_upload)
data3 <-  data3 %>%
mutate(median_between_upload = median_between_upload)%>%
mutate(subs = subs)%>%
filter(mean_between_upload < 50)%>%
filter(median_between_upload < 12)%>%
filter(subs < 40000000)
subsplot1 <- ggplot(data = data3) +
geom_point(mapping = aes(x = mean_between_upload, y = subs)) +
geom_smooth(mapping = aes(x = mean_between_upload, y = subs))
subsplot2 <- ggplot(data = data3) +
geom_point(mapping = aes(x = median_between_upload, y = subs)) +
geom_smooth(mapping = aes(x = median_between_upload, y = subs))
subsplot1
subsplot2
